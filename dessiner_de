    def dessiner_de(self, coordonnees, gauche, haut, droite, bas):
        self.create_rectangle(gauche, haut, droite, bas, fill='white',
                              outline='black', width=3)
        texte_de = self.arene.afficher_de(coordonnees)
        if texte_de.isnumeric() or texte_de == 'X':
            self.create_text((gauche + droite) // 2, (haut + bas) // 2, fill='black',
                             font="Times 20 bold", text=texte_de)
        else:
            #### DÉBUT DÉFI DESSINER DÉS ####

            # sensé être : 4 * l + 3 * d = droite-gauche
            # case = ligne rouge (d) , decalage = ligne verte (l)
            case = int(0.17 * self.dimension_case)
            decalage = int(0.1 * self.dimension_case)
            self.arene.emplacement=coordonnees

            for coordonnees, texte_de in self.arene.des.keys() :
                if texte_de == 1:
                    # milieu
                    self.create_oval(gauche + decalage * 2 + case, haut + decalage * 2 + case,
                                     gauche + decalage * 2 + case * 2, haut + decalage * 2 + case * 2, fill='black')
                elif texte_de == 2:
                    # supérieur gauche
                    self.create_oval(gauche + decalage, haut + decalage, gauche + case + decalage,
                                     haut + case + decalage, fill='black')
                    # inférieur droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage * 3 + case * 2,
                                     gauche + decalage * 3 + case * 3, haut + decalage * 3 + case * 3, fill='black')
                elif texte_de == 3:
                    # supérieur gauche
                    self.create_oval(gauche + decalage, haut + decalage, gauche + case + decalage,
                                     haut + case + decalage, fill='black')
                    # milieu
                    self.create_oval(gauche + decalage * 2 + case, haut + decalage * 2 + case,
                                     gauche + decalage * 2 + case * 2, haut + decalage * 2 + case * 2, fill='black')
                    # inférieur droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage * 3 + case * 2,
                                     gauche + decalage * 3 + case * 3, haut + decalage * 3 + case * 3, fill='black')
                elif texte_de == 4:
                    # supérieur gauche
                    self.create_oval(gauche + decalage, haut + decalage, gauche + case + decalage,
                                     haut + case + decalage, fill='black')
                    # supérieur droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage,
                                     gauche + decalage * 3 + case * 3, haut + case + decalage, fill='black')
                    # inférieur gauche
                    self.create_oval(gauche + decalage, haut + decalage * 3 + case * 2, gauche + case + decalage,
                                     haut + decalage * 3 + case * 3, fill='black')
                    # inférieur droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage * 3 + case * 2,
                                     gauche + decalage * 3 + case * 3, haut + decalage * 3 + case * 3, fill='black')
                elif texte_de == 5:
                    #supérieur gauche
                    self.create_oval(gauche + decalage, haut + decalage, gauche + case + decalage, haut + case + decalage, fill='black')
                    #supérieur droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage, gauche + decalage * 3 + case * 3, haut + case + decalage, fill='black')
                    #milieu
                    self.create_oval(gauche + decalage * 2 + case, haut + decalage * 2 + case, gauche + decalage * 2 + case * 2, haut + decalage * 2 + case * 2, fill='black')
                    #inférieur gauche
                    self.create_oval(gauche + decalage, haut + decalage * 3 + case * 2, gauche + case + decalage,haut + decalage * 3 + case * 3, fill='black')
                    #inférieur droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage * 3 + case * 2, gauche + decalage * 3 + case * 3, haut + decalage * 3 + case * 3, fill='black')
                elif texte_de == 6:
                    # supérieur gauche
                    self.create_oval(gauche + decalage, haut + decalage, gauche + case + decalage,
                                     haut + case + decalage, fill='black')
                    # supérieur droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage,
                                     gauche + decalage * 3 + case * 3, haut + case + decalage, fill='black')
                    # milieu gauche
                    self.create_oval(gauche + decalage, haut + decalage * 2 + case, gauche + case + decalage,
                                     haut + decalage * 2 + case * 2, fill='black')
                    # milieu droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage * 2 + case, gauche + decalage * 3 + case * 3,
                                     haut + decalage * 2 + case * 2, fill='black')
                    # inférieur gauche
                    self.create_oval(gauche + decalage, haut + decalage * 3 + case * 2, gauche + case + decalage,
                                     haut + decalage * 3 + case * 3, fill='black')
                    # inférieur droit
                    self.create_oval(gauche + decalage * 3 + case * 2, haut + decalage * 3 + case * 2,
                                     gauche + decalage * 3 + case * 3, haut + decalage * 3 + case * 3, fill='black')
                else:
                    pass
            #### FIN DÉFI DESSINER DÉS ####
